{"version":3,"file":"static/js/151.b6c88a60.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.jsx","components/PhonebookForm/PhonebookForm.styled.jsx","components/PhonebookForm/PhonebookForm.jsx","redux/filter/filter-selector.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsItem/ContactsItem.styled.jsx","components/ContactsList/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/AddContactsBtn/AddContactsBtn.styled.jsx","components/AddContactsBtn/AddContactsBtn.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from \"styled-components\";\nimport { MdOutlineClose } from 'react-icons/md';\n\nexport const BtnCloseStyle = styled.button`\n    display: block;\n    margin-left: auto;\n    border: ${p => p.theme.borders.none};\n    outline: none;\n    cursor: pointer;\n    background-color: ${p => p.theme.colors.white};  \n`;\n\nexport const BtnCloseIconStyle = styled(MdOutlineClose)`\n    margin-left: auto;\n    width: 20px;\n    height: 20px;\n    :hover{\n        fill: ${p => p.theme.colors.accent};\n    };\n`;\n\nexport const LabelStyled = styled.label`\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: block;\n    text-align: left;\n`;\n\nexport const InputStyled = styled.input`\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.black};\n    border-radius: ${p => p.theme.radii.normal};\n    width: 98%;\n    height: ${p => p.theme.space[5]}px;\n    :hover{\n        border-color: ${p => p.theme.colors.accent};\n    };\n`;\n\nexport const ButtonStyled = styled.button`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[2]}px;\n    padding-top: ${p => p.theme.space[2]}px;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: ${p => p.theme.space[0]}px;\n    margin-top: 55px;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.normal};\n    cursor: pointer;\n    :hover{\n        color: ${p => p.theme.colors.white};\n        background-color: ${p => p.theme.colors.accent};\n    };\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { Box } from \"../Box\";\nimport { BtnCloseStyle, BtnCloseIconStyle, LabelStyled, InputStyled, ButtonStyled } from \"./PhonebookForm.styled\";\nimport { toast } from 'react-toastify';\n\nexport const PhonebookForm = ({onClose, onCloseBtn}) => {\n  const dispatch = useDispatch();\n  const getAllContacts = useSelector(selectContacts);\n   \n  const handleSubmit = (e) => {\n      e.preventDefault();\n      const getName = getAllContacts.find(contact => contact.name.toLowerCase() === e.target.elements.name.value.toLowerCase());\n\n      if (getName){\n        toast.info('This contact already exists');\n      }\n      else {\n        dispatch(addContact({number:e.target.elements.number.value, name:e.target.elements.name.value}));\n      }\n      e.target.reset();\n      onClose();\n    };\n\n    return (\n        <Box as=\"form\" onSubmit={handleSubmit} display=\"block\" >\n            <BtnCloseStyle type='button' onClick={onCloseBtn}> <BtnCloseIconStyle /></BtnCloseStyle>\n              <LabelStyled>\n              Name\n            <InputStyled\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            </LabelStyled>\n            <LabelStyled>\n              Number\n            <InputStyled\n               type=\"tel\"\n               name=\"number\"\n               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n               title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n               required\n            />\n            </LabelStyled>\n            <ButtonStyled type=\"submit\">Add contact</ButtonStyled>\n        </Box>\n      );\n};","export const selectFilterContacts = state => state.filter;","import styled from \"styled-components\";\n\nexport const LabelStyled = styled.label`\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: 55px;\n    display: block;\n`;\n\nexport const InputStyled = styled.input`\n    margin-left: ${p => p.theme.space[3]}px;\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.black};\n    border-radius: ${p => p.theme.radii.normal};\n    width: 40%;\n    height: ${p => p.theme.space[5]}px;\n    :hover{\n        border-color: ${p => p.theme.colors.accent};\n    };\n    &:focus {\n      outline: none;\n      border-color: ${p => p.theme.colors.accent};\n      cursor: pointer;\n    };\n    &:not(:placeholder-shown) {\n      border-color: ${p => p.theme.colors.accent};\n      background-color: ${p => p.theme.colors.white};\n    }\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilterContacts } from \"redux/filter/filter-selector\";\nimport { filterContacts } from \"redux/filter/filter-slice\";\nimport { Box } from \"components/Box\";\nimport { LabelStyled, InputStyled } from \"./Filter.styled\";\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilterContacts);\n    const dispatch = useDispatch();\n    const handleFilterChange = (e) => dispatch(filterContacts(e.currentTarget.value))\n    return (\n        <Box display=\"block\" margin='0 auto'>\n            <LabelStyled>\n                <InputStyled type=\"text\" value={filter} onChange={handleFilterChange} placeholder='Find contact by name'/>\n            </LabelStyled>\n        </Box>\n    )\n};","import styled from \"styled-components\";\n\nexport const ContactItem = styled.li`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: flex;\n    align-items: center;\n`;\n\nexport const ContactDescription = styled.p`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const ContactButton = styled.button`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[2]}px;\n    padding-right: ${p => p.theme.space[2]}px;\n    padding-bottom: ${p => p.theme.space[1]}px;\n    padding-top: ${p => p.theme.space[1]}px;\n    margin-right: ${p => p.theme.space[0]}px;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.normal};\n    cursor: pointer;\n    margin-left: auto;\n    :hover{\n        color: ${p => p.theme.colors.white};\n        background-color: ${p => p.theme.colors.accent};\n    };\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { ContactItem, ContactDescription, ContactButton } from \"./ContactsItem.styled\";\n\nexport const ContactsItem = ({name, number, id}) => {\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = () => {\n        dispatch(deleteContact(id))\n    };\n    return(\n        <ContactItem>\n        <ContactDescription>{name}:</ContactDescription>\n        <ContactDescription>{number}</ContactDescription>\n        <ContactButton type=\"button\" onClick={handleDeleteContact}>Delete</ContactButton>\n    </ContactItem>\n    )\n};\n\nContactsItem.prototype = {\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\n\nexport const ContactsTitleStyle = styled.h2`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[4]}px;\n    font-weight: ${p => p.theme.fontWeights.bold};\n    margin-bottom: ${p => p.theme.space[4]}px;\n`;","import { useSelector } from \"react-redux\";\nimport { Box } from \"../Box\";\nimport { ContactsItem } from \"./ContactsItem/ContactsItem\";\nimport { selectContacts} from \"redux/contacts/contacts-selectors\";\nimport { selectFilterContacts } from  'redux/filter/filter-selector';\nimport { ContactsTitleStyle } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilterContacts);\n    const contactsItems = useSelector(selectContacts);\n\n    const getVisibleContacts = () => {\n            const normalizedFilter = filter.toLocaleLowerCase();\n            return (\n              contacts.filter(contact => \n                contact.name.toLocaleLowerCase().includes(normalizedFilter))\n            )\n          }; \n\n    const visibleContacts = filter ? getVisibleContacts() : contacts;\n    \n    return (\n        <Box as=\"ul\" width='40%' margin='0 auto'>\n            {contactsItems.length > 0 && \n                    <ContactsTitleStyle>Contacts</ContactsTitleStyle>}\n            {visibleContacts.map(({name, number, id}) => (\n                <ContactsItem key={id}\n                    id={id} \n                    name={name} \n                    number={number} />\n            ))}\n        </Box>\n    )\n};","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    `;\n  \n  export const ModalStyle = styled.div`\n    position: absolute;\n    top: 30%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    max-width: 400px;\n    width: 100%;\n    padding: 15px;\n    background-color: #fff;\n    border-radius: 3px;\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  `; ","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\nimport { Overlay, ModalStyle } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport class Modal extends React.Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    };\n    \n    handleKeyDown = (e) => {\n        if(e.code === 'Escape'){\n            this.props.onCloseModal();\n        }\n    };\n\n    handleBackdropClick = (e) => {\n        if(e.currentTarget === e.target) {\n            this.props.onCloseModal();\n        }\n    };\n\n    render() {\n        return createPortal(\n            <Overlay onClick={this.handleBackdropClick}>\n                <ModalStyle>\n                    {this.props.children}\n                </ModalStyle>\n            </Overlay>,\n            modalRoot,\n        )\n    }\n};\n\nModal.propTypes = {\n    onCloseModal: PropTypes.func.isRequired,\n};","import styled from \"styled-components\";\n\nexport const AddContactsBtnStyled = styled.button`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[2]}px;\n    padding-top: ${p => p.theme.space[2]}px;\n    background-color: ${p => p.theme.colors.background};\n    display: flex;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: ${p => p.theme.space[6]}px;\n    margin-top: ${p => p.theme.space[0]}px;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.normal};\n    cursor: pointer;\n    :hover{\n        color: ${p => p.theme.colors.linkColor};\n        background-color: ${p => p.theme.colors.accent};\n    };\n`;\n\nexport const AddContactsBtnTextStyled = styled.span`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-left: ${p => p.theme.space[3]}px;\n`;","import { AddContactsBtnStyled, AddContactsBtnTextStyled } from './AddContactsBtn.styled';\nimport { TbUserPlus } from 'react-icons/tb';\n\nexport const AddContactsBtn = ({onClickAddContactsBtn}) => {\n    return (\n        <AddContactsBtnStyled type=\"button\" onClick={onClickAddContactsBtn}>\n                <TbUserPlus />\n                <AddContactsBtnTextStyled>Add contact</AddContactsBtnTextStyled>\n            </AddContactsBtnStyled>\n    )\n};","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { Box } from '../components/Box';\nimport { selectIsLoading, selectError, selectContacts } from '../redux/contacts/contacts-selectors';\nimport { fetchContacts } from '../redux/contacts/contacts-operations';\nimport { PhonebookForm } from '../components/PhonebookForm/PhonebookForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\nimport { Modal } from \"components/Modal/Modal\";\nimport { AddContactsBtn } from \"components/AddContactsBtn/AddContactsBtn\";\n\nconst ContactsPage = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const contactsItems = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const toggleModal = () => setIsModalOpen(state => !state);\n\n    useEffect(() => {\n      dispatch(fetchContacts())\n  }, [dispatch]);\n    return (\n        <Box textAlign=\"center\" margin=\"0 auto\">\n          <AddContactsBtn onClickAddContactsBtn={toggleModal}/>\n\n          {contactsItems.length > 1 && <Filter />}\n          {isLoading && !error && <p>Is loading...</p>}\n          {error && <p>Oops! Something went wrong. Try again!</p>}\n          <ContactsList />\n\n          {isModalOpen  &&(\n              <Modal onCloseModal={toggleModal}>          \n                <PhonebookForm  onClose={toggleModal} onCloseBtn={toggleModal}/>\n              </Modal>\n          )}\n        </Box>\n    )\n};\n\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","BtnCloseStyle","styled","p","theme","borders","none","colors","white","BtnCloseIconStyle","MdOutlineClose","accent","LabelStyled","fonts","body","fontSizes","space","InputStyled","normal","black","radii","ButtonStyled","PhonebookForm","onClose","onCloseBtn","dispatch","useDispatch","getAllContacts","useSelector","Box","as","onSubmit","e","preventDefault","find","contact","name","toLowerCase","target","elements","value","toast","addContact","number","reset","display","type","onClick","pattern","title","required","selectFilterContacts","filter","Filter","margin","onChange","filterContacts","currentTarget","placeholder","ContactItem","ContactDescription","ContactButton","ContactsItem","id","deleteContact","prototype","PropTypes","phone","ContactsTitleStyle","fontWeights","bold","ContactsList","contactsItems","visibleContacts","normalizedFilter","toLocaleLowerCase","includes","getVisibleContacts","width","length","map","Overlay","ModalStyle","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onCloseModal","handleBackdropClick","window","addEventListener","this","removeEventListener","createPortal","children","React","AddContactsBtnStyled","background","linkColor","AddContactsBtnTextStyled","AddContactsBtn","onClickAddContactsBtn","useState","isModalOpen","setIsModalOpen","toggleModal","useEffect","fetchContacts","textAlign"],"sourceRoot":""}