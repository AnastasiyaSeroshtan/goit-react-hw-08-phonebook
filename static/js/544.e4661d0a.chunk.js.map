{"version":3,"file":"static/js/544.e4661d0a.chunk.js","mappings":"yMAaaA,EAAMC,EAAAA,GAAAA,IAAH,6FACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,mICvBSC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,E,6BCAnBC,EAAcnB,EAAAA,GAAAA,MAAH,6IACL,SAAAoB,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IAKTuB,EAAczB,EAAAA,GAAAA,MAAH,iLACV,SAAAoB,GAAC,OAAIA,EAAEC,MAAMK,QAAQC,MAApB,IACK,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IACA,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,MAAMH,MAAlB,IAER,SAAAP,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IAES,SAAAkB,GAAC,OAAIA,EAAEC,MAAMO,OAAOG,MAAnB,IAIZC,EAAehC,EAAAA,GAAAA,OAAH,sWACZ,SAAAoB,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IACK,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACE,SAAAJ,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACJ,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACP,SAAAkB,GAAC,OAAIA,EAAEC,MAAMK,QAAQC,MAApB,IACM,SAAAP,GAAC,OAAIA,EAAEC,MAAMS,MAAMH,MAAlB,IAGL,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,OAAOK,KAAnB,IACU,SAAAb,GAAC,OAAIA,EAAEC,MAAMO,OAAOG,MAAnB,I,UC7BhBG,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAiBC,EAAAA,EAAAA,IAAY3B,GAejC,OACI,UAACZ,EAAA,EAAD,CAAKwC,GAAG,OAAOC,SAdA,SAACC,GAClBA,EAAEC,iBACcL,EAAeM,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBL,EAAEM,OAAOC,SAASH,KAAKI,MAAMH,aAAhE,IAGzCI,OAAOC,MAAM,gCAGbhB,GAASiB,EAAAA,EAAAA,IAAW,CAACC,OAAOZ,EAAEM,OAAOC,SAASK,OAAOJ,MAAOJ,KAAKJ,EAAEM,OAAOC,SAASH,KAAKI,SAE1FR,EAAEM,OAAOO,OACV,EAG0CC,GAAG,QAAShD,OAAO,SAASiD,aAAa,SAASC,YAAY,SAASC,QAAQ,QAAQtC,EAAG,EAAGuC,GAAI,EAAxI,WACM,UAACxC,EAAD,mBAEF,SAACM,EAAD,CACEmC,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGV,UAAC5C,EAAD,qBAEA,SAACM,EAAD,CACGmC,KAAK,MACLf,KAAK,SACLgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGX,SAAC/B,EAAD,CAAc4B,KAAK,SAAnB,2BAGX,EChDYI,EAAuB,SAAApD,GAAK,OAAIA,EAAMqD,MAAV,E,SCE5B9C,EAAcnB,EAAAA,GAAAA,MAAH,6IACL,SAAAoB,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IAKTuB,EAAczB,EAAAA,GAAAA,MAAH,iLACV,SAAAoB,GAAC,OAAIA,EAAEC,MAAMK,QAAQC,MAApB,IACK,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IACA,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,MAAMH,MAAlB,IAER,SAAAP,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IAES,SAAAkB,GAAC,OAAIA,EAAEC,MAAMO,OAAOG,MAAnB,ICXZmC,EAAS,WAClB,IAAMD,GAAS3B,EAAAA,EAAAA,IAAY0B,GACrB7B,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACrC,EAAA,EAAD,CAAK4D,GAAI,EAAT,UACI,UAAC,EAAD,oCAEI,SAAC,EAAD,CAAaC,KAAK,OAAOX,MAAOgB,EAAQE,SALzB,SAAC1B,GAAD,OAAON,GAASiC,EAAAA,EAAAA,GAAe3B,EAAE4B,cAAcpB,OAA/C,QAS9B,E,mBChBYqB,EAActE,EAAAA,GAAAA,GAAH,gKACX,SAAAoB,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IACK,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IAKTqE,EAAqBvE,EAAAA,GAAAA,EAAH,iHAClB,SAAAoB,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IACK,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACE,SAAAJ,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IAGRsE,EAAgBxE,EAAAA,GAAAA,OAAH,8XACb,SAAAoB,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,KAAnB,IACK,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAU,EAAtB,IACE,SAAAJ,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACJ,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMnB,MAAM,EAAlB,IACP,SAAAkB,GAAC,OAAIA,EAAEC,MAAMK,QAAQC,MAApB,IACM,SAAAP,GAAC,OAAIA,EAAEC,MAAMS,MAAMH,MAAlB,IAIL,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,OAAOK,KAAnB,IACU,SAAAb,GAAC,OAAIA,EAAEC,MAAMO,OAAOG,MAAnB,IC5BhB0C,EAAe,SAAC,GAAwB,IAAvB5B,EAAsB,EAAtBA,KAAMQ,EAAgB,EAAhBA,OAAQqB,EAAQ,EAARA,GAClCvC,GAAWC,EAAAA,EAAAA,MAKjB,OACI,UAACkC,EAAD,YACA,UAACC,EAAD,WAAqB1B,EAArB,QACA,SAAC0B,EAAD,UAAqBlB,KACrB,SAACmB,EAAD,CAAeZ,KAAK,SAASe,QAPL,WACxBxC,GAASyC,EAAAA,EAAAA,IAAcF,GAC1B,EAKG,sBAGP,EAEDD,EAAaI,UAAY,CACrBhC,KAAMiC,IAAAA,OAAAA,WACNC,MAAOD,IAAAA,OAAAA,WACPJ,GAAII,IAAAA,OAAAA,YCjBD,IAAME,EAAe,WACxB,IAAMnE,GAAWyB,EAAAA,EAAAA,IAAY3B,GACvBsD,GAAS3B,EAAAA,EAAAA,IAAY0B,GAUrBiB,EAAkBhB,EARG,WACnB,IAAMiB,EAAmBjB,EAAOkB,oBAChC,OACEtE,EAASoD,QAAO,SAAArB,GAAO,OACrBA,EAAQC,KAAKsC,oBAAoBC,SAASF,EADrB,GAG1B,CAE0BG,GAAuBxE,EAExD,OACI,SAACd,EAAA,EAAD,CAAKwC,GAAG,KAAR,SACK0C,EAAgBK,KAAI,gBAAEzC,EAAF,EAAEA,KAAMQ,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,GAAhB,OACjB,SAACD,EAAD,CACIC,GAAIA,EACJ7B,KAAMA,EACNQ,OAAQA,GAHOqB,EADF,KAQhC,ECAD,EArBiB,WACb,IAAM1D,GAAYsB,EAAAA,EAAAA,IAAYvB,GACxBG,GAAQoB,EAAAA,EAAAA,IAAYrB,GACpBkB,GAAWC,EAAAA,EAAAA,MAIjB,OAHAmD,EAAAA,EAAAA,YAAU,WACRpD,GAASqD,EAAAA,EAAAA,MACZ,GAAE,CAACrD,KAEE,UAACpC,EAAA,EAAD,CAAKwD,GAAG,QAAQnC,EAAG,EAAGb,OAAO,SAASkD,YAAY,YAAYD,aAAa,SAASiC,MAAM,MAAOC,UAAU,oGAC1EC,UAAU,SAASC,OAAO,SAD3D,WAEE,uCACA,SAAC1D,EAAD,KACA,sCACA,SAACgC,EAAD,IACClD,IAAcE,IAAS,yCACvBA,IAAS,mEACV,SAAC8D,EAAD,MAGT,C,mCCnBD,IAAIa,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAI9D,KAAO,sBACL8D,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACN/C,OAAQ+C,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASX,EACTY,QAASrB,EACTsB,YAAatB,EACbuB,WAAYd,EACZe,KAAMxB,EACNyB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAejC,UAAYiC,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["components/Box.jsx","redux/contacts/contacts-selectors.jsx","components/PhonebookForm/PhonebookForm.styled.jsx","components/PhonebookForm/PhonebookForm.jsx","redux/filter/filter-selector.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsItem/ContactsItem.styled.jsx","components/ContactsList/ContactsItem/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components'\nimport {  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n } from 'styled-system'\n\nexport const Box = styled.div`\n  ${color}\n  ${space}\n  ${layout}\n  ${flexbox}\n  ${grid}\n  ${background}\n  ${border}\n  ${position}\n  ${shadow}\n  ${typography}\n`","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from \"styled-components\";\n\nexport const LabelStyled = styled.label`\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: block;\n    text-align: left;\n`;\n\nexport const InputStyled = styled.input`\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.black};\n    border-radius: ${p => p.theme.radii.normal};\n    width: 98%;\n    height: ${p => p.theme.space[5]}px;\n    :hover{\n        border-color: ${p => p.theme.colors.accent};\n    };\n`;\n\nexport const ButtonStyled = styled.button`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px;\n    padding-bottom: ${p => p.theme.space[2]}px;\n    padding-top: ${p => p.theme.space[2]}px;\n    margin-right: ${p => p.theme.space[3]}px;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.normal};\n    cursor: pointer;\n    :hover{\n        color: ${p => p.theme.colors.white};\n        background-color: ${p => p.theme.colors.accent};\n    };\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { Box } from \"../Box\";\nimport { LabelStyled, InputStyled, ButtonStyled } from \"./PhonebookForm.styled\";\n\nexport const PhonebookForm = () => {\n  const dispatch = useDispatch();\n  const getAllContacts = useSelector(selectContacts);\n   \n  const handleSubmit = (e) => {\n      e.preventDefault();\n      const getName = getAllContacts.find(contact => contact.name.toLowerCase() === e.target.elements.name.value.toLowerCase());\n\n      if (getName){\n        window.alert(\"This contact already exists.\");\n      }\n      else {\n        dispatch(addContact({number:e.target.elements.number.value, name:e.target.elements.name.value}));\n      }\n      e.target.reset();\n    };\n\n    return (\n        <Box as=\"form\" onSubmit={handleSubmit} bg=\"muted\"  border=\"normal\" borderRadius=\"normal\" borderColor=\"accent\" display=\"block\" p={3} mb={3} >\n              <LabelStyled>\n              Name\n            <InputStyled\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            </LabelStyled>\n            <LabelStyled>\n              Number\n            <InputStyled\n               type=\"tel\"\n               name=\"number\"\n               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n               title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n               required\n            />\n            </LabelStyled>\n            <ButtonStyled type=\"submit\">Add contact</ButtonStyled>\n        </Box>\n      );\n};","export const selectFilterContacts = state => state.filter;","import styled from \"styled-components\";\n\nexport const LabelStyled = styled.label`\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: block;\n    text-align: left;\n`;\n\nexport const InputStyled = styled.input`\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.black};\n    border-radius: ${p => p.theme.radii.normal};\n    width: 60%;\n    height: ${p => p.theme.space[5]}px;\n    :hover{\n        border-color: ${p => p.theme.colors.accent};\n    };\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilterContacts } from \"redux/filter/filter-selector\";\nimport { filterContacts } from \"redux/filter/filter-slice\";\nimport { Box } from \"components/Box\";\nimport { LabelStyled, InputStyled } from \"./Filter.styled\";\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilterContacts);\n    const dispatch = useDispatch();\n    const handleFilterChange = (e) => dispatch(filterContacts(e.currentTarget.value))\n    return (\n        <Box mb={4}>\n            <LabelStyled>\n                Find contacts by name\n                <InputStyled type=\"text\" value={filter} onChange={handleFilterChange}/>\n            </LabelStyled>\n        </Box>\n    )\n};","import styled from \"styled-components\";\n\nexport const ContactItem = styled.li`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n    display: flex;\n    align-items: center;\n`;\n\nexport const ContactDescription = styled.p`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const ContactButton = styled.button`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[2]}px;\n    padding-right: ${p => p.theme.space[2]}px;\n    padding-bottom: ${p => p.theme.space[1]}px;\n    padding-top: ${p => p.theme.space[1]}px;\n    margin-right: ${p => p.theme.space[0]}px;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.normal};\n    cursor: pointer;\n    margin-left: auto;\n    :hover{\n        color: ${p => p.theme.colors.white};\n        background-color: ${p => p.theme.colors.accent};\n    };\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { ContactItem, ContactDescription, ContactButton } from \"./ContactsItem.styled\";\n\nexport const ContactsItem = ({name, number, id}) => {\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = () => {\n        dispatch(deleteContact(id))\n    };\n    return(\n        <ContactItem>\n        <ContactDescription>{name}:</ContactDescription>\n        <ContactDescription>{number}</ContactDescription>\n        <ContactButton type=\"button\" onClick={handleDeleteContact}>Delete</ContactButton>\n    </ContactItem>\n    )\n};\n\nContactsItem.prototype = {\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n};","import { useSelector } from \"react-redux\";\nimport { Box } from \"../Box\";\nimport { ContactsItem } from \"./ContactsItem/ContactsItem\";\nimport { selectContacts} from \"redux/contacts/contacts-selectors\";\nimport { selectFilterContacts } from  'redux/filter/filter-selector';\n\nexport const ContactsList = () => {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilterContacts);\n\n    const getVisibleContacts = () => {\n            const normalizedFilter = filter.toLocaleLowerCase();\n            return (\n              contacts.filter(contact => \n                contact.name.toLocaleLowerCase().includes(normalizedFilter))\n            )\n          }; \n\n    const visibleContacts = filter ? getVisibleContacts() : contacts;\n    \n    return (\n        <Box as=\"ul\">\n            {visibleContacts.map(({name, number, id}) => (\n                <ContactsItem key={id}\n                    id={id} \n                    name={name} \n                    number={number} />\n            ))}\n        </Box>\n    )\n};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { Box } from '../components/Box';\nimport { selectIsLoading, selectError } from '../redux/contacts/contacts-selectors';\nimport { fetchContacts } from '../redux/contacts/contacts-operations';\nimport { PhonebookForm } from '../components/PhonebookForm/PhonebookForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\n\nconst Contacts = () => {\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(fetchContacts())\n  }, [dispatch]);\n    return (\n        <Box bg=\"muted\" p={3} border=\"normal\" borderColor=\"lightGray\" borderRadius=\"normal\" width=\"35%\"  boxShadow=\"0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n        1px 4px 6px rgba(0, 0, 0, 0.16)\" textAlign=\"center\" margin=\"0 auto\">\n          <h1>Phonebook</h1>\n          <PhonebookForm />\n          <h3>Contacts</h3>\n          <Filter />\n          {isLoading && !error && <p>Is loading...</p>}\n          {error && <p>Oops! Something went wrong. Try again!</p>}\n          <ContactsList />\n        </Box>\n    )\n};\n\nexport default Contacts;\n\n// import { Box } from \"./Box\";\n// import { Form } from \"./Form/Form\";\n// import { ContactsList } from \"./ContactsList/ContactsList\";\n// import { Filter } from \"./Filter/Filter\";\n// import { Header, Title } from \"./Title.styled\";\n// import { fetchContacts } from \"redux/operations\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector} from \"react-redux\";\n// import { selectError, selectIsLoading } from \"redux/selectors\";\n\n// export const App = () => {\n// //   const isLoading = useSelector(selectIsLoading);\n// //   const error = useSelector(selectError);\n// //   const dispatch = useDispatch();\n// //   useEffect(() => {\n// //     dispatch(fetchContacts())\n// // }, [dispatch]);\n\n//   return (\n//     <Box bg=\"muted\" p={3} border=\"normal\" borderColor=\"lightGray\" borderRadius=\"normal\" width=\"35%\"  boxShadow=\"0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n//     1px 4px 6px rgba(0, 0, 0, 0.16)\" textAlign=\"center\" margin=\"0 auto\">\n//       <Header>Phonebook</Header>\n//       <Form />\n//       <Title>Contacts</Title>\n//       <Filter />\n//       {isLoading && !error && <p>Is loading...</p>}\n//       {error && <p>Oops! Something went wrong. Try again!</p>}\n//       <ContactsList />\n//     </Box>\n//   );\n// };","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","shadow","typography","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","LabelStyled","p","theme","fonts","body","fontSizes","InputStyled","borders","normal","colors","black","radii","accent","ButtonStyled","white","PhonebookForm","dispatch","useDispatch","getAllContacts","useSelector","as","onSubmit","e","preventDefault","find","contact","name","toLowerCase","target","elements","value","window","alert","addContact","number","reset","bg","borderRadius","borderColor","display","mb","type","pattern","title","required","selectFilterContacts","filter","Filter","onChange","filterContacts","currentTarget","ContactItem","ContactDescription","ContactButton","ContactsItem","id","onClick","deleteContact","prototype","PropTypes","phone","ContactsList","visibleContacts","normalizedFilter","toLocaleLowerCase","includes","getVisibleContacts","map","useEffect","fetchContacts","width","boxShadow","textAlign","margin","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}